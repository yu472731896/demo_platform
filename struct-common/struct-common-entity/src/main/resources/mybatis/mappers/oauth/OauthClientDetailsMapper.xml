<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.minghui.entity.defaults.oauth.dao.OauthClientDetailsDAO" >
    <resultMap id="BaseResultMap" type="com.minghui.entity.defaults.oauth.model.OauthClientDetails" >
        <id column="oauth_client_details_id" property="oauthClientDetailsId" jdbcType="INTEGER" />
        <result column="client_id" property="clientId" jdbcType="VARCHAR" />
        <result column="resource_ids" property="resourceIds" jdbcType="VARCHAR" />
        <result column="client_secret" property="clientSecret" jdbcType="VARCHAR" />
        <result column="client_secret_str" property="clientSecretStr" jdbcType="VARCHAR" />
        <result column="scope" property="scope" jdbcType="VARCHAR" />
        <result column="authorized_grant_types" property="authorizedGrantTypes" jdbcType="VARCHAR" />
        <result column="web_server_redirect_uri" property="webServerRedirectUri" jdbcType="VARCHAR" />
        <result column="authorities" property="authorities" jdbcType="VARCHAR" />
        <result column="access_token_validity" property="accessTokenValidity" jdbcType="INTEGER" />
        <result column="refresh_token_validity" property="refreshTokenValidity" jdbcType="INTEGER" />
        <result column="additional_information" property="additionalInformation" jdbcType="VARCHAR" />
        <result column="autoapprove" property="autoapprove" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        oauth_client_details_id, client_id, resource_ids, client_secret, client_secret_str, 
        scope, authorized_grant_types, web_server_redirect_uri, authorities, access_token_validity, 
        refresh_token_validity, additional_information, autoapprove
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.minghui.entity.defaults.oauth.model.OauthClientDetailsExample" >
        select
        <if test="distinct" >
            distinct
		</if>
        <if test="includeColums == null or includeColums.size()==0" >
			<include refid="Base_Column_List"/>
        </if>
        <if test="includeColums != null or includeColums.size()>0" >
            <foreach collection="includeColums" index="index" item="includeColums" separator="," >
            	${includeColums}
            </foreach>
        </if> from oauth_client_details
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null" >
			order by ${orderByClause}
        </if>
        <include refid="MySqlPaginationSuffix" />
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from oauth_client_details
        where oauth_client_details_id = #{oauthClientDetailsId,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from oauth_client_details
        where oauth_client_details_id = #{oauthClientDetailsId,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.minghui.entity.defaults.oauth.model.OauthClientDetailsExample" >
        delete from oauth_client_details
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.minghui.entity.defaults.oauth.model.OauthClientDetails" >
        <selectKey resultType="java.lang.Integer" keyProperty="oauthClientDetailsId" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into oauth_client_details (client_id, resource_ids, client_secret, 
            client_secret_str, scope, authorized_grant_types, 
            web_server_redirect_uri, authorities, access_token_validity, 
            refresh_token_validity, additional_information, 
            autoapprove)
        values (#{clientId,jdbcType=VARCHAR}, #{resourceIds,jdbcType=VARCHAR}, #{clientSecret,jdbcType=VARCHAR}, 
            #{clientSecretStr,jdbcType=VARCHAR}, #{scope,jdbcType=VARCHAR}, #{authorizedGrantTypes,jdbcType=VARCHAR}, 
            #{webServerRedirectUri,jdbcType=VARCHAR}, #{authorities,jdbcType=VARCHAR}, #{accessTokenValidity,jdbcType=INTEGER}, 
            #{refreshTokenValidity,jdbcType=INTEGER}, #{additionalInformation,jdbcType=VARCHAR}, 
            #{autoapprove,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.minghui.entity.defaults.oauth.model.OauthClientDetails" >
        <selectKey resultType="java.lang.Integer" keyProperty="oauthClientDetailsId" order="AFTER" >
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into oauth_client_details
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="clientId != null" >
                client_id,
            </if>
            <if test="resourceIds != null" >
                resource_ids,
            </if>
            <if test="clientSecret != null" >
                client_secret,
            </if>
            <if test="clientSecretStr != null" >
                client_secret_str,
            </if>
            <if test="scope != null" >
                scope,
            </if>
            <if test="authorizedGrantTypes != null" >
                authorized_grant_types,
            </if>
            <if test="webServerRedirectUri != null" >
                web_server_redirect_uri,
            </if>
            <if test="authorities != null" >
                authorities,
            </if>
            <if test="accessTokenValidity != null" >
                access_token_validity,
            </if>
            <if test="refreshTokenValidity != null" >
                refresh_token_validity,
            </if>
            <if test="additionalInformation != null" >
                additional_information,
            </if>
            <if test="autoapprove != null" >
                autoapprove,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="clientId != null" >
                #{clientId,jdbcType=VARCHAR},
            </if>
            <if test="resourceIds != null" >
                #{resourceIds,jdbcType=VARCHAR},
            </if>
            <if test="clientSecret != null" >
                #{clientSecret,jdbcType=VARCHAR},
            </if>
            <if test="clientSecretStr != null" >
                #{clientSecretStr,jdbcType=VARCHAR},
            </if>
            <if test="scope != null" >
                #{scope,jdbcType=VARCHAR},
            </if>
            <if test="authorizedGrantTypes != null" >
                #{authorizedGrantTypes,jdbcType=VARCHAR},
            </if>
            <if test="webServerRedirectUri != null" >
                #{webServerRedirectUri,jdbcType=VARCHAR},
            </if>
            <if test="authorities != null" >
                #{authorities,jdbcType=VARCHAR},
            </if>
            <if test="accessTokenValidity != null" >
                #{accessTokenValidity,jdbcType=INTEGER},
            </if>
            <if test="refreshTokenValidity != null" >
                #{refreshTokenValidity,jdbcType=INTEGER},
            </if>
            <if test="additionalInformation != null" >
                #{additionalInformation,jdbcType=VARCHAR},
            </if>
            <if test="autoapprove != null" >
                #{autoapprove,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.minghui.entity.defaults.oauth.model.OauthClientDetailsExample" resultType="java.lang.Integer" >
        SELECT COUNT(1) FROM
        <if test="distinct" >
            (SELECT
          DISTINCT
          <include refid="Base_Column_List"/>
          from oauth_client_details
          <if test="_parameter != null">
              <include refid="Example_Where_Clause"/>
          </if>) AS COUNT_SQL
        </if>
        <if test="!distinct" >
            
          oauth_client_details
          <if test="_parameter != null" >
              <include refid="Example_Where_Clause" />
          </if>

        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update oauth_client_details
        <set >
            <if test="record.oauthClientDetailsId != null" >
                oauth_client_details_id = #{record.oauthClientDetailsId,jdbcType=INTEGER},
            </if>
            <if test="record.clientId != null" >
                client_id = #{record.clientId,jdbcType=VARCHAR},
            </if>
            <if test="record.resourceIds != null" >
                resource_ids = #{record.resourceIds,jdbcType=VARCHAR},
            </if>
            <if test="record.clientSecret != null" >
                client_secret = #{record.clientSecret,jdbcType=VARCHAR},
            </if>
            <if test="record.clientSecretStr != null" >
                client_secret_str = #{record.clientSecretStr,jdbcType=VARCHAR},
            </if>
            <if test="record.scope != null" >
                scope = #{record.scope,jdbcType=VARCHAR},
            </if>
            <if test="record.authorizedGrantTypes != null" >
                authorized_grant_types = #{record.authorizedGrantTypes,jdbcType=VARCHAR},
            </if>
            <if test="record.webServerRedirectUri != null" >
                web_server_redirect_uri = #{record.webServerRedirectUri,jdbcType=VARCHAR},
            </if>
            <if test="record.authorities != null" >
                authorities = #{record.authorities,jdbcType=VARCHAR},
            </if>
            <if test="record.accessTokenValidity != null" >
                access_token_validity = #{record.accessTokenValidity,jdbcType=INTEGER},
            </if>
            <if test="record.refreshTokenValidity != null" >
                refresh_token_validity = #{record.refreshTokenValidity,jdbcType=INTEGER},
            </if>
            <if test="record.additionalInformation != null" >
                additional_information = #{record.additionalInformation,jdbcType=VARCHAR},
            </if>
            <if test="record.autoapprove != null" >
                autoapprove = #{record.autoapprove,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update oauth_client_details
        set oauth_client_details_id = #{record.oauthClientDetailsId,jdbcType=INTEGER},
            client_id = #{record.clientId,jdbcType=VARCHAR},
            resource_ids = #{record.resourceIds,jdbcType=VARCHAR},
            client_secret = #{record.clientSecret,jdbcType=VARCHAR},
            client_secret_str = #{record.clientSecretStr,jdbcType=VARCHAR},
            scope = #{record.scope,jdbcType=VARCHAR},
            authorized_grant_types = #{record.authorizedGrantTypes,jdbcType=VARCHAR},
            web_server_redirect_uri = #{record.webServerRedirectUri,jdbcType=VARCHAR},
            authorities = #{record.authorities,jdbcType=VARCHAR},
            access_token_validity = #{record.accessTokenValidity,jdbcType=INTEGER},
            refresh_token_validity = #{record.refreshTokenValidity,jdbcType=INTEGER},
            additional_information = #{record.additionalInformation,jdbcType=VARCHAR},
            autoapprove = #{record.autoapprove,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.minghui.entity.defaults.oauth.model.OauthClientDetails" >
        update oauth_client_details
        <set >
            <if test="clientId != null" >
                client_id = #{clientId,jdbcType=VARCHAR},
            </if>
            <if test="resourceIds != null" >
                resource_ids = #{resourceIds,jdbcType=VARCHAR},
            </if>
            <if test="clientSecret != null" >
                client_secret = #{clientSecret,jdbcType=VARCHAR},
            </if>
            <if test="clientSecretStr != null" >
                client_secret_str = #{clientSecretStr,jdbcType=VARCHAR},
            </if>
            <if test="scope != null" >
                scope = #{scope,jdbcType=VARCHAR},
            </if>
            <if test="authorizedGrantTypes != null" >
                authorized_grant_types = #{authorizedGrantTypes,jdbcType=VARCHAR},
            </if>
            <if test="webServerRedirectUri != null" >
                web_server_redirect_uri = #{webServerRedirectUri,jdbcType=VARCHAR},
            </if>
            <if test="authorities != null" >
                authorities = #{authorities,jdbcType=VARCHAR},
            </if>
            <if test="accessTokenValidity != null" >
                access_token_validity = #{accessTokenValidity,jdbcType=INTEGER},
            </if>
            <if test="refreshTokenValidity != null" >
                refresh_token_validity = #{refreshTokenValidity,jdbcType=INTEGER},
            </if>
            <if test="additionalInformation != null" >
                additional_information = #{additionalInformation,jdbcType=VARCHAR},
            </if>
            <if test="autoapprove != null" >
                autoapprove = #{autoapprove,jdbcType=VARCHAR},
            </if>
        </set>
        where oauth_client_details_id = #{oauthClientDetailsId,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.minghui.entity.defaults.oauth.model.OauthClientDetails" >
        update oauth_client_details
        set client_id = #{clientId,jdbcType=VARCHAR},
            resource_ids = #{resourceIds,jdbcType=VARCHAR},
            client_secret = #{clientSecret,jdbcType=VARCHAR},
            client_secret_str = #{clientSecretStr,jdbcType=VARCHAR},
            scope = #{scope,jdbcType=VARCHAR},
            authorized_grant_types = #{authorizedGrantTypes,jdbcType=VARCHAR},
            web_server_redirect_uri = #{webServerRedirectUri,jdbcType=VARCHAR},
            authorities = #{authorities,jdbcType=VARCHAR},
            access_token_validity = #{accessTokenValidity,jdbcType=INTEGER},
            refresh_token_validity = #{refreshTokenValidity,jdbcType=INTEGER},
            additional_information = #{additionalInformation,jdbcType=VARCHAR},
            autoapprove = #{autoapprove,jdbcType=VARCHAR}
        where oauth_client_details_id = #{oauthClientDetailsId,jdbcType=INTEGER}
    </update>
    <sql id="MySqlPaginationSuffix" >
        <if test="pager != null" >
            <![CDATA[ LIMIT #{pager.pageSize} OFFSET #{pager.recordIndex}]]>
        </if>
    </sql>
</mapper>